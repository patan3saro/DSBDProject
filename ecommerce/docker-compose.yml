version: '3.4'

x-common-variables: &common-variables
  DATASOURCE_HOST: ${DB_HOST}
  DATASOURCE_USER: ${DB_USER}
  DATASOURCE_PASSWORD: ${DB_PASSWORD}
  DATASOURCE_NAME: ${DB_DATABASE}
  DATASOURCE_PORT: ${DB_PORT}
  REGISTRATION_SERVER: ${REGISTRATION_SERVER_HOST}
  REGISTRATION_SERVER_PORT: ${REGISTRATION_SERVER_PORT}
  ORDER_MANAGER_PORT: ${ORDER_MANAGER_PORT}
  PRODUCT_MANAGER_PORT: ${PRODUCT_MANAGER_PORT}
  USER_MANAGER_PORT: ${USER_MANAGER_PORT}
  HEARTBEAT_MANAGER_PORT: ${HEARTBEAT_MANAGER_PORT}
  HEARTBEAT_TIMEOUT: ${HEARTBEAT_TIMEOUT}

x-xxx-common-services-config: &common-services-config
  restart: always

x-kafka-env: &kafka-env
  KAFKA_BROKER_ID: 1
  KAFKA_ADVERTISED_PORT: 9092
  BROKER_ID_COMMAND: "hostname | cut -d'-' -f2"
  KAFKA_CREATE_TOPICS: "logging:20:1,pushnotifications:10:1,invoicing:10:1,mailing:10:1,userupdates:10:1,orderupdates:10:1"
  KAFKA_LISTENERS: "PLAINTEXT://:9092"
  KAFKA_ADVERTISED_HOST_NAME: kafka
  KAFKA_ZOOKEEPER_CONNECT: zookeper:2181


services:
  mysqldb:
    image: mysql:5.7
    command:
      --default-authentication-plugin=mysql_native_password
    ports:
      - "3306:3306"
    environment:
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
    restart: always
    volumes:
      - mystorage:/var/lib/mysql

  registrationserver:
    build:
      context: ""
      dockerfile: registrationserver/Dockerfile
    ports:
      - "1111:1111"
    restart: always
    environment:
      REGISTRATION_SERVER_PORT: ${REGISTRATION_SERVER_PORT}

  springgateway:
    build:
      context: ""
      dockerfile: springgateway/Dockerfile
    ports:
      - "9999:9999"
    depends_on:
      - registrationserver
    restart: always
    environment:
      REGISTRATION_SERVER: ${REGISTRATION_SERVER_HOST}
      REGISTRATION_SERVER_PORT: ${REGISTRATION_SERVER_PORT}

  usermanager:
    build:
      context: ""
      dockerfile: usermanager/Dockerfile
    depends_on:
      - mysqldb
      - registrationserver
    restart: always
    environment:
      <<: *common-variables

  productmanager:
    build:
      context: ""
      dockerfile: productmanager/Dockerfile
    depends_on:
      - mysqldb
      - registrationserver
    restart: always
    environment:
      <<: *common-variables

  ordermanager:
    build:
      context: ""
      dockerfile: ordermanager/Dockerfile
    depends_on:
      - mysqldb
      - registrationserver
    restart: always
    environment:
      <<: *common-variables

  zookeper:
    <<: *common-services-config
    image: library/zookeeper:3.4.13
    environment:
      ZOO_MY_ID: 1

  kafka:
    <<: *common-services-config
    image: wurstmeister/kafka:2.11-2.0.0
    ports:
      - "9092:9092"
    environment: *kafka-env
    depends_on:
      - zookeper

  heartbeatmanager:
    build:
      context: ""
      dockerfile: heartbeatmanager/Dockerfile
    depends_on:
      - registrationserver
    restart: always
    environment:
      <<: *common-variables

volumes:
  mystorage: